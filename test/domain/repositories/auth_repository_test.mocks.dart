// Mocks generated by Mockito 5.4.6 from annotations
// in offro_cibo/test/domain/repositories/auth_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:offro_cibo/data/data_sources/firebase_auth_service.dart' as _i3;
import 'package:offro_cibo/data/data_sources/firebase_firestore_user_service.dart'
    as _i5;
import 'package:offro_cibo/data/models/custom_user_dto.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeCustomUserDTO_0 extends _i1.SmartFake implements _i2.CustomUserDTO {
  _FakeCustomUserDTO_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [FirebaseAuthServiceApi].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebaseAuthServiceApi extends _i1.Mock
    implements _i3.FirebaseAuthServiceApi {
  MockFirebaseAuthServiceApi() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<String?> createUserWithEmailAndPassword(
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #createUserWithEmailAndPassword,
          [
            email,
            password,
          ],
        ),
        returnValue: _i4.Future<String?>.value(),
      ) as _i4.Future<String?>);

  @override
  _i4.Future<void> signInWithEmailAndPassword(
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithEmailAndPassword,
          [
            email,
            password,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> signOut() => (super.noSuchMethod(
        Invocation.method(
          #signOut,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> sendPasswordResetEmail(String? email) => (super.noSuchMethod(
        Invocation.method(
          #sendPasswordResetEmail,
          [email],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}

/// A class which mocks [FirebaseFirestoreUserServiceApi].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebaseFirestoreUserServiceApi extends _i1.Mock
    implements _i5.FirebaseFirestoreUserServiceApi {
  MockFirebaseFirestoreUserServiceApi() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.CustomUserDTO> addUser(_i2.CustomUserDTO? newUser) =>
      (super.noSuchMethod(
        Invocation.method(
          #addUser,
          [newUser],
        ),
        returnValue: _i4.Future<_i2.CustomUserDTO>.value(_FakeCustomUserDTO_0(
          this,
          Invocation.method(
            #addUser,
            [newUser],
          ),
        )),
      ) as _i4.Future<_i2.CustomUserDTO>);

  @override
  _i4.Future<void> getUserByEmail(String? email) => (super.noSuchMethod(
        Invocation.method(
          #getUserByEmail,
          [email],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<_i2.CustomUserDTO> getUserById(String? id) => (super.noSuchMethod(
        Invocation.method(
          #getUserById,
          [id],
        ),
        returnValue: _i4.Future<_i2.CustomUserDTO>.value(_FakeCustomUserDTO_0(
          this,
          Invocation.method(
            #getUserById,
            [id],
          ),
        )),
      ) as _i4.Future<_i2.CustomUserDTO>);

  @override
  _i4.Future<_i2.CustomUserDTO> updateUser(_i2.CustomUserDTO? user) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateUser,
          [user],
        ),
        returnValue: _i4.Future<_i2.CustomUserDTO>.value(_FakeCustomUserDTO_0(
          this,
          Invocation.method(
            #updateUser,
            [user],
          ),
        )),
      ) as _i4.Future<_i2.CustomUserDTO>);
}
